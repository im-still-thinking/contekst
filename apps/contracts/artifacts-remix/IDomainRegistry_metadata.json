{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "domainName",
						"type": "string"
					}
				],
				"name": "getDomainAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Interface for the DomainRegistry contract to enable secure contract-to-contract communication",
			"kind": "dev",
			"methods": {
				"getDomainAddress(string)": {
					"details": "Returns the official wallet address for a given domain name",
					"params": {
						"domainName": "The domain name to look up (e.g., \"chatgpt.com\")"
					},
					"returns": {
						"_0": "The official wallet address associated with the domain"
					}
				}
			},
			"title": "IDomainRegistry",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/IDomainRegistry.sol": "IDomainRegistry"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/IDomainRegistry.sol": {
			"keccak256": "0x2dc9516d2ae6d4ebc69a9cefc6d5c56b56bd05f7077d0af0e4642b7ca8879ab9",
			"license": "MIT",
			"urls": [
				"bzz-raw://2e80f2ab6039ca328cca0f2718e379e13f232e9970406d07e2bf916ffe58e65e",
				"dweb:/ipfs/QmXw9mt8tnE2yzE36bGf6d62WZ5ds4hCUL1Dpv5reksRKf"
			]
		}
	},
	"version": 1
}