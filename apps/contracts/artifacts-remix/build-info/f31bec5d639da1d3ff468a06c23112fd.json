{
	"id": "f31bec5d639da1d3ff468a06c23112fd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/DomainRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/**\r\n * @title DomainRegistry\r\n * @dev A foundational contract that acts as a secure, on-chain directory for application domains.\r\n * This contract solves the challenge of securely identifying application domains like \"chatgpt.com\" on-chain.\r\n * A smart contract cannot trust a simple string name; it needs a cryptographic identity.\r\n * This registry provides that by linking the human-readable domain name to a secure, official Hedera wallet address.\r\n */\r\ncontract DomainRegistry {\r\n    // The protocol administrator who can register new domains\r\n    address public immutable admin;\r\n    \r\n    // A mapping from the domain name string to its official Hedera wallet address.\r\n    // e.g., \"chatgpt.com\" => 0x123...abc\r\n    mapping(string => address) public domains;\r\n    \r\n    // Events for tracking domain registrations\r\n    event DomainRegistered(string indexed domainName, address indexed officialAddress);\r\n    \r\n    // Modifier to ensure only the admin can call certain functions\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"DomainRegistry: Only admin can call this function\");\r\n        _;\r\n    }\r\n    \r\n    // Modifier to ensure domain name is not empty\r\n    modifier validDomainName(string memory domainName) {\r\n        require(bytes(domainName).length > 0, \"DomainRegistry: Domain name cannot be empty\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev Constructor sets the admin to the deployer\r\n     */\r\n    constructor() {\r\n        admin = msg.sender;\r\n    }\r\n    \r\n    /**\r\n     * @dev Register a new application domain to the registry\r\n     * @param domainName The human-readable domain name (e.g., \"chatgpt.com\")\r\n     * @param officialAddress The official Hedera wallet address controlled by the application's owner\r\n     * \r\n     * This is a one-time setup for each participating application (e.g., ChatGPT, Claude) \r\n     * to establish their official on-chain identity.\r\n     */\r\n    function registerDomain(\r\n        string memory domainName, \r\n        address officialAddress\r\n    ) external onlyAdmin validDomainName(domainName) {\r\n        require(officialAddress != address(0), \"DomainRegistry: Official address cannot be zero address\");\r\n        require(domains[domainName] == address(0), \"DomainRegistry: Domain already registered\");\r\n        \r\n        domains[domainName] = officialAddress;\r\n        emit DomainRegistered(domainName, officialAddress);\r\n    }\r\n    \r\n    /**\r\n     * @dev Get the official wallet address for a given domain name\r\n     * @param domainName The domain name to look up\r\n     * @return The official wallet address associated with the domain\r\n     * \r\n     * This function allows the MemoryControl contract and any external party \r\n     * to look up the official wallet address for a given domain name.\r\n     */\r\n    function getDomainAddress(string memory domainName) external view returns (address) {\r\n        address domainAddress = domains[domainName];\r\n        require(domainAddress != address(0), \"DomainRegistry: Domain not registered\");\r\n        return domainAddress;\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if a domain is registered\r\n     * @param domainName The domain name to check\r\n     * @return True if the domain is registered, false otherwise\r\n     */\r\n    function isDomainRegistered(string memory domainName) external view returns (bool) {\r\n        return domains[domainName] != address(0);\r\n    }\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/DomainRegistry.sol": {
				"DomainRegistry": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "domainName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "officialAddress",
									"type": "address"
								}
							],
							"name": "DomainRegistered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "domains",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "domainName",
									"type": "string"
								}
							],
							"name": "getDomainAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "domainName",
									"type": "string"
								}
							],
							"name": "isDomainRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "domainName",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "officialAddress",
									"type": "address"
								}
							],
							"name": "registerDomain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A foundational contract that acts as a secure, on-chain directory for application domains. This contract solves the challenge of securely identifying application domains like \"chatgpt.com\" on-chain. A smart contract cannot trust a simple string name; it needs a cryptographic identity. This registry provides that by linking the human-readable domain name to a secure, official Hedera wallet address.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor sets the admin to the deployer"
							},
							"getDomainAddress(string)": {
								"details": "Get the official wallet address for a given domain name",
								"params": {
									"domainName": "The domain name to look up"
								},
								"returns": {
									"_0": "The official wallet address associated with the domain  This function allows the MemoryControl contract and any external party  to look up the official wallet address for a given domain name."
								}
							},
							"isDomainRegistered(string)": {
								"details": "Check if a domain is registered",
								"params": {
									"domainName": "The domain name to check"
								},
								"returns": {
									"_0": "True if the domain is registered, false otherwise"
								}
							},
							"registerDomain(string,address)": {
								"details": "Register a new application domain to the registry",
								"params": {
									"domainName": "The human-readable domain name (e.g., \"chatgpt.com\")",
									"officialAddress": "The official Hedera wallet address controlled by the application's owner  This is a one-time setup for each participating application (e.g., ChatGPT, Claude)  to establish their official on-chain identity."
								}
							}
						},
						"title": "DomainRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DomainRegistry.sol\":519:3452  contract DomainRegistry {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/DomainRegistry.sol\":1501:1552  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/DomainRegistry.sol\":1534:1544  msg.sender */\n  caller\n    /* \"contracts/DomainRegistry.sol\":1526:1544  admin = msg.sender */\n  0x80\n  mstore\n    /* \"contracts/DomainRegistry.sol\":519:3452  contract DomainRegistry {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x13600b294191fc92924bb3ce4b969c1e7e2bab8f4c93c3fc6d0a51733df3c060\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/DomainRegistry.sol\":519:3452  contract DomainRegistry {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1c452781\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x26449235\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x94310e51\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf52433cb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/DomainRegistry.sol\":3307:3449  function isDomainRegistered(string memory domainName) external view returns (bool) {... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":1369:1383   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1362:1384   */\n      iszero\n        /* \"#utility.yul\":1344:1385   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1332:1334   */\n      0x20\n        /* \"#utility.yul\":1317:1335   */\n      add\n        /* \"contracts/DomainRegistry.sol\":3307:3449  function isDomainRegistered(string memory domainName) external view returns (bool) {... */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DomainRegistry.sol\":785:826  mapping(string => address) public domains */\n    tag_4:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_15:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x00\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1560:1592   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1542:1593   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1530:1532   */\n      0x20\n        /* \"#utility.yul\":1515:1533   */\n      add\n        /* \"contracts/DomainRegistry.sol\":785:826  mapping(string => address) public domains */\n      tag_12\n        /* \"#utility.yul\":1396:1599   */\n      jump\n        /* \"contracts/DomainRegistry.sol\":2850:3115  function getDomainAddress(string memory domainName) external view returns (address) {... */\n    tag_5:\n      tag_14\n      tag_20\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n        /* \"contracts/DomainRegistry.sol\":1985:2466  function registerDomain(... */\n    tag_6:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/DomainRegistry.sol\":614:644  address public immutable admin */\n    tag_7:\n      tag_14\n      immutable(\"0x13600b294191fc92924bb3ce4b969c1e7e2bab8f4c93c3fc6d0a51733df3c060\")\n      dup2\n      jump\n        /* \"contracts/DomainRegistry.sol\":3307:3449  function isDomainRegistered(string memory domainName) external view returns (bool) {... */\n    tag_11:\n        /* \"contracts/DomainRegistry.sol\":3384:3388  bool */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":3439:3440  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DomainRegistry.sol\":3408:3441  domains[domainName] != address(0) */\n      and\n        /* \"contracts/DomainRegistry.sol\":3408:3415  domains */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":3416:3426  domainName */\n      dup4\n        /* \"contracts/DomainRegistry.sol\":3408:3427  domains[domainName] */\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DomainRegistry.sol\":3408:3441  domains[domainName] != address(0) */\n      eq\n      iszero\n      swap3\n        /* \"contracts/DomainRegistry.sol\":3307:3449  function isDomainRegistered(string memory domainName) external view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":2850:3115  function getDomainAddress(string memory domainName) external view returns (address) {... */\n    tag_21:\n        /* \"contracts/DomainRegistry.sol\":2925:2932  address */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":2945:2966  address domainAddress */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":2969:2976  domains */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":2977:2987  domainName */\n      dup4\n        /* \"contracts/DomainRegistry.sol\":2969:2988  domains[domainName] */\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_34:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup1\n        /* \"contracts/DomainRegistry.sol\":2999:3076  require(domainAddress != address(0), \"DomainRegistry: Domain not registered\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2615:2617   */\n      0x20\n        /* \"contracts/DomainRegistry.sol\":2999:3076  require(domainAddress != address(0), \"DomainRegistry: Domain not registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2597:2618   */\n      mstore\n        /* \"#utility.yul\":2654:2656   */\n      0x25\n        /* \"#utility.yul\":2634:2652   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2627:2657   */\n      mstore\n        /* \"#utility.yul\":2693:2727   */\n      0x446f6d61696e52656769737472793a20446f6d61696e206e6f74207265676973\n        /* \"#utility.yul\":2673:2691   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2666:2728   */\n      mstore\n      shl(0xda, 0x1d195c9959)\n        /* \"#utility.yul\":2744:2762   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2737:2772   */\n      mstore\n        /* \"#utility.yul\":2789:2808   */\n      0x84\n      add\n        /* \"contracts/DomainRegistry.sol\":2999:3076  require(domainAddress != address(0), \"DomainRegistry: Domain not registered\") */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/DomainRegistry.sol\":3094:3107  domainAddress */\n      swap3\n        /* \"contracts/DomainRegistry.sol\":2850:3115  function getDomainAddress(string memory domainName) external view returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DomainRegistry.sol\":1985:2466  function registerDomain(... */\n    tag_26:\n        /* \"contracts/DomainRegistry.sol\":1092:1102  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DomainRegistry.sol\":1106:1111  admin */\n      immutable(\"0x13600b294191fc92924bb3ce4b969c1e7e2bab8f4c93c3fc6d0a51733df3c060\")\n        /* \"contracts/DomainRegistry.sol\":1092:1111  msg.sender == admin */\n      and\n      eq\n        /* \"contracts/DomainRegistry.sol\":1084:1165  require(msg.sender == admin, \"DomainRegistry: Only admin can call this function\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"contracts/DomainRegistry.sol\":1084:1165  require(msg.sender == admin, \"DomainRegistry: Only admin can call this function\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3003:3024   */\n      mstore\n        /* \"#utility.yul\":3060:3062   */\n      0x31\n        /* \"#utility.yul\":3040:3058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3033:3063   */\n      mstore\n        /* \"#utility.yul\":3099:3133   */\n      0x446f6d61696e52656769737472793a204f6e6c792061646d696e2063616e2063\n        /* \"#utility.yul\":3079:3097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3072:3134   */\n      mstore\n      shl(0x79, 0x30b636103a3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":3150:3168   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3143:3190   */\n      mstore\n        /* \"#utility.yul\":3207:3226   */\n      0x84\n      add\n        /* \"contracts/DomainRegistry.sol\":1084:1165  require(msg.sender == admin, \"DomainRegistry: Only admin can call this function\") */\n      tag_36\n        /* \"#utility.yul\":2819:3232   */\n      jump\n        /* \"contracts/DomainRegistry.sol\":1084:1165  require(msg.sender == admin, \"DomainRegistry: Only admin can call this function\") */\n    tag_39:\n        /* \"contracts/DomainRegistry.sol\":2121:2131  domainName */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":1346:1347  0 */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":1325:1335  domainName */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":1319:1343  bytes(domainName).length */\n      mload\n        /* \"contracts/DomainRegistry.sol\":1319:1347  bytes(domainName).length > 0 */\n      gt\n        /* \"contracts/DomainRegistry.sol\":1311:1395  require(bytes(domainName).length > 0, \"DomainRegistry: Domain name cannot be empty\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3439:3441   */\n      0x20\n        /* \"contracts/DomainRegistry.sol\":1311:1395  require(bytes(domainName).length > 0, \"DomainRegistry: Domain name cannot be empty\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3421:3442   */\n      mstore\n        /* \"#utility.yul\":3478:3480   */\n      0x2b\n        /* \"#utility.yul\":3458:3476   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3451:3481   */\n      mstore\n        /* \"#utility.yul\":3517:3551   */\n      0x446f6d61696e52656769737472793a20446f6d61696e206e616d652063616e6e\n        /* \"#utility.yul\":3497:3515   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3490:3552   */\n      mstore\n      shl(0xa8, 0x6f7420626520656d707479)\n        /* \"#utility.yul\":3568:3586   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3561:3602   */\n      mstore\n        /* \"#utility.yul\":3619:3638   */\n      0x84\n      add\n        /* \"contracts/DomainRegistry.sol\":1311:1395  require(bytes(domainName).length > 0, \"DomainRegistry: Domain name cannot be empty\") */\n      tag_36\n        /* \"#utility.yul\":3237:3644   */\n      jump\n        /* \"contracts/DomainRegistry.sol\":1311:1395  require(bytes(domainName).length > 0, \"DomainRegistry: Domain name cannot be empty\") */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DomainRegistry.sol\":2152:2181  officialAddress != address(0) */\n      dup3\n      and\n        /* \"contracts/DomainRegistry.sol\":2144:2241  require(officialAddress != address(0), \"DomainRegistry: Official address cannot be zero address\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3851:3853   */\n      0x20\n        /* \"contracts/DomainRegistry.sol\":2144:2241  require(officialAddress != address(0), \"DomainRegistry: Official address cannot be zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3833:3854   */\n      mstore\n        /* \"#utility.yul\":3890:3892   */\n      0x37\n        /* \"#utility.yul\":3870:3888   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3863:3893   */\n      mstore\n        /* \"#utility.yul\":3929:3963   */\n      0x446f6d61696e52656769737472793a204f6666696369616c2061646472657373\n        /* \"#utility.yul\":3909:3927   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3902:3964   */\n      mstore\n        /* \"#utility.yul\":4000:4025   */\n      0x2063616e6e6f74206265207a65726f2061646472657373000000000000000000\n        /* \"#utility.yul\":3980:3998   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3973:4026   */\n      mstore\n        /* \"#utility.yul\":4043:4062   */\n      0x84\n      add\n        /* \"contracts/DomainRegistry.sol\":2144:2241  require(officialAddress != address(0), \"DomainRegistry: Official address cannot be zero address\") */\n      tag_36\n        /* \"#utility.yul\":3649:4068   */\n      jump\n        /* \"contracts/DomainRegistry.sol\":2144:2241  require(officialAddress != address(0), \"DomainRegistry: Official address cannot be zero address\") */\n    tag_47:\n        /* \"contracts/DomainRegistry.sol\":2291:2292  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DomainRegistry.sol\":2260:2293  domains[domainName] == address(0) */\n      and\n        /* \"contracts/DomainRegistry.sol\":2260:2267  domains */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":2268:2278  domainName */\n      dup5\n        /* \"contracts/DomainRegistry.sol\":2260:2279  domains[domainName] */\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_50:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DomainRegistry.sol\":2260:2293  domains[domainName] == address(0) */\n      eq\n        /* \"contracts/DomainRegistry.sol\":2252:2339  require(domains[domainName] == address(0), \"DomainRegistry: Domain already registered\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4275:4277   */\n      0x20\n        /* \"contracts/DomainRegistry.sol\":2252:2339  require(domains[domainName] == address(0), \"DomainRegistry: Domain already registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4257:4278   */\n      mstore\n        /* \"#utility.yul\":4314:4316   */\n      0x29\n        /* \"#utility.yul\":4294:4312   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4287:4317   */\n      mstore\n        /* \"#utility.yul\":4353:4387   */\n      0x446f6d61696e52656769737472793a20446f6d61696e20616c72656164792072\n        /* \"#utility.yul\":4333:4351   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4326:4388   */\n      mstore\n      shl(0xba, 0x1959da5cdd195c9959)\n        /* \"#utility.yul\":4404:4422   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4397:4436   */\n      mstore\n        /* \"#utility.yul\":4453:4472   */\n      0x84\n      add\n        /* \"contracts/DomainRegistry.sol\":2252:2339  require(domains[domainName] == address(0), \"DomainRegistry: Domain already registered\") */\n      tag_36\n        /* \"#utility.yul\":4073:4478   */\n      jump\n        /* \"contracts/DomainRegistry.sol\":2252:2339  require(domains[domainName] == address(0), \"DomainRegistry: Domain already registered\") */\n    tag_51:\n        /* \"contracts/DomainRegistry.sol\":2382:2397  officialAddress */\n      dup2\n        /* \"contracts/DomainRegistry.sol\":2360:2367  domains */\n      0x00\n        /* \"contracts/DomainRegistry.sol\":2368:2378  domainName */\n      dup5\n        /* \"contracts/DomainRegistry.sol\":2360:2379  domains[domainName] */\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_54:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      dup2\n      keccak256\n        /* \"contracts/DomainRegistry.sol\":2360:2397  domains[domainName] = officialAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/DomainRegistry.sol\":2413:2458  DomainRegistered(domainName, officialAddress) */\n      swap1\n      dup4\n      and\n      swap1\n      tag_55\n      swap1\n        /* \"contracts/DomainRegistry.sol\":2430:2440  domainName */\n      dup6\n      swap1\n        /* \"contracts/DomainRegistry.sol\":2413:2458  DomainRegistered(domainName, officialAddress) */\n      tag_32\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n      swap1\n      0x70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/DomainRegistry.sol\":1176:1177  _ */\n      pop\n        /* \"contracts/DomainRegistry.sol\":1985:2466  function registerDomain(... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_56:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:872   */\n    tag_57:\n        /* \"#utility.yul\":189:194   */\n      0x00\n        /* \"#utility.yul\":242:245   */\n      dup3\n        /* \"#utility.yul\":235:239   */\n      0x1f\n        /* \"#utility.yul\":227:233   */\n      dup4\n        /* \"#utility.yul\":223:240   */\n      add\n        /* \"#utility.yul\":219:246   */\n      slt\n        /* \"#utility.yul\":209:264   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":260:261   */\n      0x00\n        /* \"#utility.yul\":257:258   */\n      0x00\n        /* \"#utility.yul\":250:262   */\n      revert\n        /* \"#utility.yul\":209:264   */\n    tag_61:\n        /* \"#utility.yul\":300:306   */\n      dup2\n        /* \"#utility.yul\":287:307   */\n      calldataload\n        /* \"#utility.yul\":330:348   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":322:328   */\n      dup2\n        /* \"#utility.yul\":319:349   */\n      gt\n        /* \"#utility.yul\":316:372   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":352:370   */\n      tag_63\n      tag_56\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":401:403   */\n      0x40\n        /* \"#utility.yul\":395:404   */\n      mload\n        /* \"#utility.yul\":493:495   */\n      0x1f\n        /* \"#utility.yul\":455:472   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":451:482   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":484:486   */\n      0x3f\n        /* \"#utility.yul\":447:487   */\n      add\n        /* \"#utility.yul\":443:497   */\n      and\n        /* \"#utility.yul\":431:498   */\n      dup2\n      add\n        /* \"#utility.yul\":528:546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":513:547   */\n      dup2\n      gt\n        /* \"#utility.yul\":549:571   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":510:572   */\n      or\n        /* \"#utility.yul\":507:595   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":575:593   */\n      tag_65\n      tag_56\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":611:613   */\n      0x40\n        /* \"#utility.yul\":604:626   */\n      mstore\n        /* \"#utility.yul\":635:657   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":676:695   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":697:701   */\n      0x20\n        /* \"#utility.yul\":672:702   */\n      add\n        /* \"#utility.yul\":669:708   */\n      dup6\n      lt\n        /* \"#utility.yul\":666:725   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":721:722   */\n      0x00\n        /* \"#utility.yul\":718:719   */\n      0x00\n        /* \"#utility.yul\":711:723   */\n      revert\n        /* \"#utility.yul\":666:725   */\n    tag_66:\n        /* \"#utility.yul\":785:791   */\n      dup2\n        /* \"#utility.yul\":778:782   */\n      0x20\n        /* \"#utility.yul\":770:776   */\n      dup6\n        /* \"#utility.yul\":766:783   */\n      add\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":751:757   */\n      dup4\n        /* \"#utility.yul\":747:764   */\n      add\n        /* \"#utility.yul\":734:792   */\n      calldatacopy\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":812:831   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":833:837   */\n      0x20\n        /* \"#utility.yul\":808:838   */\n      add\n        /* \"#utility.yul\":801:842   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":816:822   */\n      swap4\n        /* \"#utility.yul\":146:872   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":877:1199   */\n    tag_10:\n        /* \"#utility.yul\":946:952   */\n      0x00\n        /* \"#utility.yul\":999:1001   */\n      0x20\n        /* \"#utility.yul\":987:996   */\n      dup3\n        /* \"#utility.yul\":978:985   */\n      dup5\n        /* \"#utility.yul\":974:997   */\n      sub\n        /* \"#utility.yul\":970:1002   */\n      slt\n        /* \"#utility.yul\":967:1019   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1005:1017   */\n      revert\n        /* \"#utility.yul\":967:1019   */\n    tag_68:\n        /* \"#utility.yul\":1055:1064   */\n      dup2\n        /* \"#utility.yul\":1042:1065   */\n      calldataload\n        /* \"#utility.yul\":1088:1106   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1080:1086   */\n      dup2\n        /* \"#utility.yul\":1077:1107   */\n      gt\n        /* \"#utility.yul\":1074:1124   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1120:1121   */\n      0x00\n        /* \"#utility.yul\":1117:1118   */\n      0x00\n        /* \"#utility.yul\":1110:1122   */\n      revert\n        /* \"#utility.yul\":1074:1124   */\n    tag_69:\n        /* \"#utility.yul\":1143:1193   */\n      tag_70\n        /* \"#utility.yul\":1185:1192   */\n      dup5\n        /* \"#utility.yul\":1176:1182   */\n      dup3\n        /* \"#utility.yul\":1165:1174   */\n      dup6\n        /* \"#utility.yul\":1161:1183   */\n      add\n        /* \"#utility.yul\":1143:1193   */\n      tag_57\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1133:1193   */\n      swap5\n        /* \"#utility.yul\":877:1199   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1604:2100   */\n    tag_25:\n        /* \"#utility.yul\":1682:1688   */\n      0x00\n        /* \"#utility.yul\":1690:1696   */\n      0x00\n        /* \"#utility.yul\":1743:1745   */\n      0x40\n        /* \"#utility.yul\":1731:1740   */\n      dup4\n        /* \"#utility.yul\":1722:1729   */\n      dup6\n        /* \"#utility.yul\":1718:1741   */\n      sub\n        /* \"#utility.yul\":1714:1746   */\n      slt\n        /* \"#utility.yul\":1711:1763   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1759:1760   */\n      0x00\n        /* \"#utility.yul\":1756:1757   */\n      0x00\n        /* \"#utility.yul\":1749:1761   */\n      revert\n        /* \"#utility.yul\":1711:1763   */\n    tag_74:\n        /* \"#utility.yul\":1799:1808   */\n      dup3\n        /* \"#utility.yul\":1786:1809   */\n      calldataload\n        /* \"#utility.yul\":1832:1850   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1824:1830   */\n      dup2\n        /* \"#utility.yul\":1821:1851   */\n      gt\n        /* \"#utility.yul\":1818:1868   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      0x00\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1818:1868   */\n    tag_75:\n        /* \"#utility.yul\":1887:1937   */\n      tag_76\n        /* \"#utility.yul\":1929:1936   */\n      dup6\n        /* \"#utility.yul\":1920:1926   */\n      dup3\n        /* \"#utility.yul\":1909:1918   */\n      dup7\n        /* \"#utility.yul\":1905:1927   */\n      add\n        /* \"#utility.yul\":1887:1937   */\n      tag_57\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1877:1937   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":1987:1989   */\n      0x20\n        /* \"#utility.yul\":1972:1990   */\n      dup4\n      add\n        /* \"#utility.yul\":1959:1991   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2020:2051   */\n      dup2\n      and\n        /* \"#utility.yul\":2010:2052   */\n      dup2\n      eq\n        /* \"#utility.yul\":2000:2070   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2066:2067   */\n      0x00\n        /* \"#utility.yul\":2063:2064   */\n      0x00\n        /* \"#utility.yul\":2056:2068   */\n      revert\n        /* \"#utility.yul\":2000:2070   */\n    tag_77:\n        /* \"#utility.yul\":2089:2094   */\n      dup1\n        /* \"#utility.yul\":2079:2094   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1604:2100   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2105:2408   */\n    tag_32:\n        /* \"#utility.yul\":2236:2239   */\n      0x00\n        /* \"#utility.yul\":2274:2280   */\n      dup3\n        /* \"#utility.yul\":2268:2281   */\n      mload\n        /* \"#utility.yul\":2320:2326   */\n      dup1\n        /* \"#utility.yul\":2313:2317   */\n      0x20\n        /* \"#utility.yul\":2305:2311   */\n      dup6\n        /* \"#utility.yul\":2301:2318   */\n      add\n        /* \"#utility.yul\":2296:2299   */\n      dup5\n        /* \"#utility.yul\":2290:2327   */\n      mcopy\n        /* \"#utility.yul\":2382:2383   */\n      0x00\n        /* \"#utility.yul\":2346:2362   */\n      swap3\n      add\n        /* \"#utility.yul\":2371:2384   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":2346:2362   */\n      swap2\n        /* \"#utility.yul\":2105:2408   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220de138af3ccd3145301b31c3d9bf37ef49a0487fe6cb5b2faec9ad3b8f0d3aa9e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600e575f5ffd5b50336080526080516105e96100315f395f818160f901526101f301526105e95ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80631c45278114610059578063264492351461008157806394310e51146100cc578063f52433cb146100df578063f851a440146100f4575b5f5ffd5b61006c610067366004610509565b61011b565b60405190151581526020015b60405180910390f35b6100b461008f366004610509565b80516020818301810180515f825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610078565b6100b46100da366004610509565b610156565b6100f26100ed366004610543565b6101e8565b005b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b5f5f6001600160a01b03165f83604051610135919061059d565b908152604051908190036020019020546001600160a01b0316141592915050565b5f5f5f83604051610167919061059d565b908152604051908190036020019020546001600160a01b03169050806101e25760405162461bcd60e51b815260206004820152602560248201527f446f6d61696e52656769737472793a20446f6d61696e206e6f742072656769736044820152641d195c995960da1b60648201526084015b60405180910390fd5b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461027a5760405162461bcd60e51b815260206004820152603160248201527f446f6d61696e52656769737472793a204f6e6c792061646d696e2063616e206360448201527030b636103a3434b990333ab731ba34b7b760791b60648201526084016101d9565b815f8151116102df5760405162461bcd60e51b815260206004820152602b60248201527f446f6d61696e52656769737472793a20446f6d61696e206e616d652063616e6e60448201526a6f7420626520656d70747960a81b60648201526084016101d9565b6001600160a01b03821661035b5760405162461bcd60e51b815260206004820152603760248201527f446f6d61696e52656769737472793a204f6666696369616c206164647265737360448201527f2063616e6e6f74206265207a65726f206164647265737300000000000000000060648201526084016101d9565b5f6001600160a01b03165f84604051610374919061059d565b908152604051908190036020019020546001600160a01b0316146103ec5760405162461bcd60e51b815260206004820152602960248201527f446f6d61696e52656769737472793a20446f6d61696e20616c726561647920726044820152681959da5cdd195c995960ba1b60648201526084016101d9565b815f846040516103fc919061059d565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790559083169061043690859061059d565b604051908190038120907f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12905f90a3505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261048d575f5ffd5b813567ffffffffffffffff8111156104a7576104a761046a565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156104d6576104d661046a565b6040528181528382016020018510156104ed575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f60208284031215610519575f5ffd5b813567ffffffffffffffff81111561052f575f5ffd5b61053b8482850161047e565b949350505050565b5f5f60408385031215610554575f5ffd5b823567ffffffffffffffff81111561056a575f5ffd5b6105768582860161047e565b92505060208301356001600160a01b0381168114610592575f5ffd5b809150509250929050565b5f82518060208501845e5f92019182525091905056fea2646970667358221220de138af3ccd3145301b31c3d9bf37ef49a0487fe6cb5b2faec9ad3b8f0d3aa9e64736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x5E9 PUSH2 0x31 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0xF9 ADD MSTORE PUSH2 0x1F3 ADD MSTORE PUSH2 0x5E9 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C452781 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x26449235 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x94310E51 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xF52433CB EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x509 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH0 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A20446F6D61696E206E6F74207265676973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D195C9959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A204F6E6C792061646D696E2063616E2063 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x30B636103A3434B990333AB731BA34B7B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D9 JUMP JUMPDEST DUP2 PUSH0 DUP2 MLOAD GT PUSH2 0x2DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A20446F6D61696E206E616D652063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6F7420626520656D707479 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A204F6666696369616C2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2063616E6E6F74206265207A65726F2061646472657373000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A20446F6D61696E20616C72656164792072 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1959DA5CDD195C9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D9 JUMP JUMPDEST DUP2 PUSH0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 DUP4 AND SWAP1 PUSH2 0x436 SWAP1 DUP6 SWAP1 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x48D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x4ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x519 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x53B DUP5 DUP3 DUP6 ADD PUSH2 0x47E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x554 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x576 DUP6 DUP3 DUP7 ADD PUSH2 0x47E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x592 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE SGT DUP11 RETURN 0xCC 0xD3 EQ MSTORE8 ADD 0xB3 SHR RETURNDATASIZE SWAP12 RETURN PUSH31 0xF49A0487FE6CB5B2FAEC9AD3B8F0D3AA9E64736F6C634300081C0033000000 ",
							"sourceMap": "519:2933:0:-:0;;;1501:51;;;;;;;;;-1:-1:-1;1534:10:0;1526:18;;519:2933;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@admin_4": {
									"entryPoint": null,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@domains_8": {
									"entryPoint": null,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDomainAddress_127": {
									"entryPoint": 342,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isDomainRegistered_145": {
									"entryPoint": 283,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@registerDomain_100": {
									"entryPoint": 488,
									"id": 100,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_209aa3c13be13d80e6819fc1acb7f7d92620b9012725a3d16f28c00e7778b413__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3339f474afdf0e37f4d993298f48e536fe48135f96f5513f5dde0093a76752b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_400239adc9e69987df7e7bf4151102499431456be40138755da18c0a587ab55a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89d605ee78fe26d620f6940d1f47ddee2371dc8f25fd7a2e850939982115e2b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa4890144b1dd84822325425d1cff6abb74592a84aa8ccb4e2300645fbeeb83a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4480:1",
										"nodeType": "YulBlock",
										"src": "0:4480:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "199:673:1",
													"nodeType": "YulBlock",
													"src": "199:673:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "248:16:1",
																"nodeType": "YulBlock",
																"src": "248:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "257:1:1",
																					"nodeType": "YulLiteral",
																					"src": "257:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "260:1:1",
																					"nodeType": "YulLiteral",
																					"src": "260:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "250:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "250:6:1"
																			},
																			"nativeSrc": "250:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "250:12:1"
																		},
																		"nativeSrc": "250:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "250:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "227:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "227:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "235:4:1",
																						"nodeType": "YulLiteral",
																						"src": "235:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "223:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "223:3:1"
																				},
																				"nativeSrc": "223:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "223:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "242:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "219:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "219:3:1"
																		},
																		"nativeSrc": "219:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "219:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "212:6:1"
																},
																"nativeSrc": "212:35:1",
																"nodeType": "YulFunctionCall",
																"src": "212:35:1"
															},
															"nativeSrc": "209:55:1",
															"nodeType": "YulIf",
															"src": "209:55:1"
														},
														{
															"nativeSrc": "273:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "273:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "287:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "287:12:1"
																},
																"nativeSrc": "287:20:1",
																"nodeType": "YulFunctionCall",
																"src": "287:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "277:6:1",
																	"nodeType": "YulTypedName",
																	"src": "277:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "350:22:1",
																"nodeType": "YulBlock",
																"src": "350:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "352:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "352:16:1"
																			},
																			"nativeSrc": "352:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "352:18:1"
																		},
																		"nativeSrc": "352:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "352:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "322:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "322:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "330:18:1",
																		"nodeType": "YulLiteral",
																		"src": "330:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "319:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "319:2:1"
																},
																"nativeSrc": "319:30:1",
																"nodeType": "YulFunctionCall",
																"src": "319:30:1"
															},
															"nativeSrc": "316:56:1",
															"nodeType": "YulIf",
															"src": "316:56:1"
														},
														{
															"nativeSrc": "381:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "381:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "401:2:1",
																		"nodeType": "YulLiteral",
																		"src": "401:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "395:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "395:5:1"
																},
																"nativeSrc": "395:9:1",
																"nodeType": "YulFunctionCall",
																"src": "395:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "385:6:1",
																	"nodeType": "YulTypedName",
																	"src": "385:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "413:85:1",
															"nodeType": "YulVariableDeclaration",
															"src": "413:85:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "435:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "435:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "459:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "459:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "467:4:1",
																										"nodeType": "YulLiteral",
																										"src": "467:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "455:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "455:3:1"
																								},
																								"nativeSrc": "455:17:1",
																								"nodeType": "YulFunctionCall",
																								"src": "455:17:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "478:2:1",
																										"nodeType": "YulLiteral",
																										"src": "478:2:1",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "474:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "474:3:1"
																								},
																								"nativeSrc": "474:7:1",
																								"nodeType": "YulFunctionCall",
																								"src": "474:7:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "451:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:1"
																						},
																						"nativeSrc": "451:31:1",
																						"nodeType": "YulFunctionCall",
																						"src": "451:31:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "484:2:1",
																						"nodeType": "YulLiteral",
																						"src": "484:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "447:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "447:3:1"
																				},
																				"nativeSrc": "447:40:1",
																				"nodeType": "YulFunctionCall",
																				"src": "447:40:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "493:2:1",
																						"nodeType": "YulLiteral",
																						"src": "493:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "489:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "489:3:1"
																				},
																				"nativeSrc": "489:7:1",
																				"nodeType": "YulFunctionCall",
																				"src": "489:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "443:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "443:3:1"
																		},
																		"nativeSrc": "443:54:1",
																		"nodeType": "YulFunctionCall",
																		"src": "443:54:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "431:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "431:3:1"
																},
																"nativeSrc": "431:67:1",
																"nodeType": "YulFunctionCall",
																"src": "431:67:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "417:10:1",
																	"nodeType": "YulTypedName",
																	"src": "417:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "573:22:1",
																"nodeType": "YulBlock",
																"src": "573:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "575:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "575:16:1"
																			},
																			"nativeSrc": "575:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "575:18:1"
																		},
																		"nativeSrc": "575:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "575:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "516:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "528:18:1",
																				"nodeType": "YulLiteral",
																				"src": "528:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "513:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "513:2:1"
																		},
																		"nativeSrc": "513:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "513:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "552:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "552:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "564:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "549:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "549:2:1"
																		},
																		"nativeSrc": "549:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "549:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "510:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "510:2:1"
																},
																"nativeSrc": "510:62:1",
																"nodeType": "YulFunctionCall",
																"src": "510:62:1"
															},
															"nativeSrc": "507:88:1",
															"nodeType": "YulIf",
															"src": "507:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "611:2:1",
																		"nodeType": "YulLiteral",
																		"src": "611:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "615:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "615:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "604:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "604:6:1"
																},
																"nativeSrc": "604:22:1",
																"nodeType": "YulFunctionCall",
																"src": "604:22:1"
															},
															"nativeSrc": "604:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "604:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "642:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "650:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "650:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "635:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:6:1"
																},
																"nativeSrc": "635:22:1",
																"nodeType": "YulFunctionCall",
																"src": "635:22:1"
															},
															"nativeSrc": "635:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "635:22:1"
														},
														{
															"body": {
																"nativeSrc": "709:16:1",
																"nodeType": "YulBlock",
																"src": "709:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "718:1:1",
																					"nodeType": "YulLiteral",
																					"src": "718:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "721:1:1",
																					"nodeType": "YulLiteral",
																					"src": "721:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "711:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "711:6:1"
																			},
																			"nativeSrc": "711:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "711:12:1"
																		},
																		"nativeSrc": "711:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "711:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "680:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "680:6:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "688:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "688:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "676:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "676:3:1"
																				},
																				"nativeSrc": "676:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "676:19:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "697:4:1",
																				"nodeType": "YulLiteral",
																				"src": "697:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "672:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:1"
																		},
																		"nativeSrc": "672:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "672:30:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "704:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "704:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "669:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "669:2:1"
																},
																"nativeSrc": "669:39:1",
																"nodeType": "YulFunctionCall",
																"src": "669:39:1"
															},
															"nativeSrc": "666:59:1",
															"nodeType": "YulIf",
															"src": "666:59:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "751:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:1",
																				"nodeType": "YulLiteral",
																				"src": "759:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "747:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:1"
																		},
																		"nativeSrc": "747:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "747:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "770:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "778:4:1",
																				"nodeType": "YulLiteral",
																				"src": "778:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "766:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:1"
																		},
																		"nativeSrc": "766:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "785:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "734:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "734:12:1"
																},
																"nativeSrc": "734:58:1",
																"nodeType": "YulFunctionCall",
																"src": "734:58:1"
															},
															"nativeSrc": "734:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "734:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "816:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "816:6:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "824:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "824:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "812:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "812:3:1"
																				},
																				"nativeSrc": "812:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "812:19:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "833:4:1",
																				"nodeType": "YulLiteral",
																				"src": "833:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:1"
																		},
																		"nativeSrc": "808:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "808:30:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "840:1:1",
																		"nodeType": "YulLiteral",
																		"src": "840:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "801:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:1"
																},
																"nativeSrc": "801:41:1",
																"nodeType": "YulFunctionCall",
																"src": "801:41:1"
															},
															"nativeSrc": "801:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "801:41:1"
														},
														{
															"nativeSrc": "851:15:1",
															"nodeType": "YulAssignment",
															"src": "851:15:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "860:6:1",
																"nodeType": "YulIdentifier",
																"src": "860:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "851:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "851:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "146:726:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "173:6:1",
														"nodeType": "YulTypedName",
														"src": "173:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "181:3:1",
														"nodeType": "YulTypedName",
														"src": "181:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "189:5:1",
														"nodeType": "YulTypedName",
														"src": "189:5:1",
														"type": ""
													}
												],
												"src": "146:726:1"
											},
											{
												"body": {
													"nativeSrc": "957:242:1",
													"nodeType": "YulBlock",
													"src": "957:242:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1003:16:1",
																"nodeType": "YulBlock",
																"src": "1003:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1012:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1012:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1015:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1015:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1005:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1005:6:1"
																			},
																			"nativeSrc": "1005:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1005:12:1"
																		},
																		"nativeSrc": "1005:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1005:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "978:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "987:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "987:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "999:2:1",
																		"nodeType": "YulLiteral",
																		"src": "999:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "970:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "970:3:1"
																},
																"nativeSrc": "970:32:1",
																"nodeType": "YulFunctionCall",
																"src": "970:32:1"
															},
															"nativeSrc": "967:52:1",
															"nodeType": "YulIf",
															"src": "967:52:1"
														},
														{
															"nativeSrc": "1028:37:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1028:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1055:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1055:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1042:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1042:12:1"
																},
																"nativeSrc": "1042:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1042:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1032:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1032:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1108:16:1",
																"nodeType": "YulBlock",
																"src": "1108:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1117:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1117:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1120:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1120:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1110:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1110:6:1"
																			},
																			"nativeSrc": "1110:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1110:12:1"
																		},
																		"nativeSrc": "1110:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1110:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1080:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1080:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1088:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1088:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1077:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1077:2:1"
																},
																"nativeSrc": "1077:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1077:30:1"
															},
															"nativeSrc": "1074:50:1",
															"nodeType": "YulIf",
															"src": "1074:50:1"
														},
														{
															"nativeSrc": "1133:60:1",
															"nodeType": "YulAssignment",
															"src": "1133:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1165:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1165:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1176:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1161:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:3:1"
																		},
																		"nativeSrc": "1161:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1185:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1185:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1143:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:17:1"
																},
																"nativeSrc": "1143:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1143:50:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1133:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1133:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "877:322:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "923:9:1",
														"nodeType": "YulTypedName",
														"src": "923:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "934:7:1",
														"nodeType": "YulTypedName",
														"src": "934:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "946:6:1",
														"nodeType": "YulTypedName",
														"src": "946:6:1",
														"type": ""
													}
												],
												"src": "877:322:1"
											},
											{
												"body": {
													"nativeSrc": "1299:92:1",
													"nodeType": "YulBlock",
													"src": "1299:92:1",
													"statements": [
														{
															"nativeSrc": "1309:26:1",
															"nodeType": "YulAssignment",
															"src": "1309:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1321:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1321:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1332:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1332:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1317:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1317:3:1"
																},
																"nativeSrc": "1317:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1317:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1309:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1309:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1351:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1376:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1376:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1369:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1369:6:1"
																				},
																				"nativeSrc": "1369:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1369:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1362:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1362:6:1"
																		},
																		"nativeSrc": "1362:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1362:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1344:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:1"
																},
																"nativeSrc": "1344:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1344:41:1"
															},
															"nativeSrc": "1344:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1344:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1204:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1268:9:1",
														"nodeType": "YulTypedName",
														"src": "1268:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1279:6:1",
														"nodeType": "YulTypedName",
														"src": "1279:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1290:4:1",
														"nodeType": "YulTypedName",
														"src": "1290:4:1",
														"type": ""
													}
												],
												"src": "1204:187:1"
											},
											{
												"body": {
													"nativeSrc": "1497:102:1",
													"nodeType": "YulBlock",
													"src": "1497:102:1",
													"statements": [
														{
															"nativeSrc": "1507:26:1",
															"nodeType": "YulAssignment",
															"src": "1507:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1519:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1519:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1530:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1530:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1515:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:1"
																},
																"nativeSrc": "1515:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1515:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1507:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1549:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1549:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1564:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1580:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1580:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1585:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1585:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1576:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1576:3:1"
																						},
																						"nativeSrc": "1576:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1576:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1589:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1589:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1572:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1572:3:1"
																				},
																				"nativeSrc": "1572:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1572:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1560:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1560:3:1"
																		},
																		"nativeSrc": "1560:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1560:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1542:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:1"
																},
																"nativeSrc": "1542:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1542:51:1"
															},
															"nativeSrc": "1542:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1542:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1396:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1466:9:1",
														"nodeType": "YulTypedName",
														"src": "1466:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1477:6:1",
														"nodeType": "YulTypedName",
														"src": "1477:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1488:4:1",
														"nodeType": "YulTypedName",
														"src": "1488:4:1",
														"type": ""
													}
												],
												"src": "1396:203:1"
											},
											{
												"body": {
													"nativeSrc": "1701:399:1",
													"nodeType": "YulBlock",
													"src": "1701:399:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1747:16:1",
																"nodeType": "YulBlock",
																"src": "1747:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1756:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1756:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1759:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1749:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1749:6:1"
																			},
																			"nativeSrc": "1749:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1749:12:1"
																		},
																		"nativeSrc": "1749:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1749:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1722:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1731:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1718:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1718:3:1"
																		},
																		"nativeSrc": "1718:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1718:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1714:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:1"
																},
																"nativeSrc": "1714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1714:32:1"
															},
															"nativeSrc": "1711:52:1",
															"nodeType": "YulIf",
															"src": "1711:52:1"
														},
														{
															"nativeSrc": "1772:37:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1772:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1799:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1799:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1786:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1786:12:1"
																},
																"nativeSrc": "1786:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1786:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1776:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1776:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1852:16:1",
																"nodeType": "YulBlock",
																"src": "1852:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:1"
																			},
																			"nativeSrc": "1854:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:1"
																		},
																		"nativeSrc": "1854:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1824:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1824:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1832:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1832:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1821:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1821:2:1"
																},
																"nativeSrc": "1821:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1821:30:1"
															},
															"nativeSrc": "1818:50:1",
															"nodeType": "YulIf",
															"src": "1818:50:1"
														},
														{
															"nativeSrc": "1877:60:1",
															"nodeType": "YulAssignment",
															"src": "1877:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1909:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1909:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1920:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1905:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:1"
																		},
																		"nativeSrc": "1905:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1905:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1929:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1929:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1887:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1887:17:1"
																},
																"nativeSrc": "1887:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1887:50:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1877:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:1"
																}
															]
														},
														{
															"nativeSrc": "1946:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1946:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1976:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1976:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1987:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1987:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1972:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:1"
																		},
																		"nativeSrc": "1972:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1972:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1959:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1959:12:1"
																},
																"nativeSrc": "1959:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1959:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1950:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1950:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2054:16:1",
																"nodeType": "YulBlock",
																"src": "2054:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2063:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2063:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2066:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2066:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2056:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2056:6:1"
																			},
																			"nativeSrc": "2056:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2056:12:1"
																		},
																		"nativeSrc": "2056:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2056:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2013:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2013:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2024:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2024:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2039:3:1",
																										"nodeType": "YulLiteral",
																										"src": "2039:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2044:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2044:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2035:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2035:3:1"
																								},
																								"nativeSrc": "2035:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2035:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2048:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2048:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2031:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2031:3:1"
																						},
																						"nativeSrc": "2031:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2031:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2020:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2020:3:1"
																				},
																				"nativeSrc": "2020:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2020:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2010:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2010:2:1"
																		},
																		"nativeSrc": "2010:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2010:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:1"
																},
																"nativeSrc": "2003:50:1",
																"nodeType": "YulFunctionCall",
																"src": "2003:50:1"
															},
															"nativeSrc": "2000:70:1",
															"nodeType": "YulIf",
															"src": "2000:70:1"
														},
														{
															"nativeSrc": "2079:15:1",
															"nodeType": "YulAssignment",
															"src": "2079:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2089:5:1",
																"nodeType": "YulIdentifier",
																"src": "2089:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2079:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address",
												"nativeSrc": "1604:496:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1659:9:1",
														"nodeType": "YulTypedName",
														"src": "1659:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1670:7:1",
														"nodeType": "YulTypedName",
														"src": "1670:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1682:6:1",
														"nodeType": "YulTypedName",
														"src": "1682:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1690:6:1",
														"nodeType": "YulTypedName",
														"src": "1690:6:1",
														"type": ""
													}
												],
												"src": "1604:496:1"
											},
											{
												"body": {
													"nativeSrc": "2244:164:1",
													"nodeType": "YulBlock",
													"src": "2244:164:1",
													"statements": [
														{
															"nativeSrc": "2254:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2254:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2274:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2274:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2268:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:1"
																},
																"nativeSrc": "2268:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2268:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2258:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2258:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2296:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2296:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2305:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2305:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2313:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2313:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2301:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:1"
																		},
																		"nativeSrc": "2301:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2320:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2290:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2290:5:1"
																},
																"nativeSrc": "2290:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2290:37:1"
															},
															"nativeSrc": "2290:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2290:37:1"
														},
														{
															"nativeSrc": "2336:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2336:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2350:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2350:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2355:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2355:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2346:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:1"
																},
																"nativeSrc": "2346:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2346:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2340:2:1",
																	"nodeType": "YulTypedName",
																	"src": "2340:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2378:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "2378:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2382:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2382:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2371:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:1"
																},
																"nativeSrc": "2371:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2371:13:1"
															},
															"nativeSrc": "2371:13:1",
															"nodeType": "YulExpressionStatement",
															"src": "2371:13:1"
														},
														{
															"nativeSrc": "2393:9:1",
															"nodeType": "YulAssignment",
															"src": "2393:9:1",
															"value": {
																"name": "_1",
																"nativeSrc": "2400:2:1",
																"nodeType": "YulIdentifier",
																"src": "2400:2:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2105:303:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2220:3:1",
														"nodeType": "YulTypedName",
														"src": "2220:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2225:6:1",
														"nodeType": "YulTypedName",
														"src": "2225:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2236:3:1",
														"nodeType": "YulTypedName",
														"src": "2236:3:1",
														"type": ""
													}
												],
												"src": "2105:303:1"
											},
											{
												"body": {
													"nativeSrc": "2587:227:1",
													"nodeType": "YulBlock",
													"src": "2587:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2604:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2615:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2597:6:1"
																},
																"nativeSrc": "2597:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2597:21:1"
															},
															"nativeSrc": "2597:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2597:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2638:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2638:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2649:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2649:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:1"
																		},
																		"nativeSrc": "2634:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2654:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2654:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:1"
																},
																"nativeSrc": "2627:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2627:30:1"
															},
															"nativeSrc": "2627:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "2627:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2677:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2677:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2688:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2688:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2673:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2673:3:1"
																		},
																		"nativeSrc": "2673:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2673:18:1"
																	},
																	{
																		"hexValue": "446f6d61696e52656769737472793a20446f6d61696e206e6f74207265676973",
																		"kind": "string",
																		"nativeSrc": "2693:34:1",
																		"nodeType": "YulLiteral",
																		"src": "2693:34:1",
																		"type": "",
																		"value": "DomainRegistry: Domain not regis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2666:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2666:6:1"
																},
																"nativeSrc": "2666:62:1",
																"nodeType": "YulFunctionCall",
																"src": "2666:62:1"
															},
															"nativeSrc": "2666:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "2666:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2748:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2748:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2759:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2759:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2744:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:1"
																		},
																		"nativeSrc": "2744:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:18:1"
																	},
																	{
																		"hexValue": "7465726564",
																		"kind": "string",
																		"nativeSrc": "2764:7:1",
																		"nodeType": "YulLiteral",
																		"src": "2764:7:1",
																		"type": "",
																		"value": "tered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:1"
																},
																"nativeSrc": "2737:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2737:35:1"
															},
															"nativeSrc": "2737:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "2737:35:1"
														},
														{
															"nativeSrc": "2781:27:1",
															"nodeType": "YulAssignment",
															"src": "2781:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2793:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2793:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2804:3:1",
																		"nodeType": "YulLiteral",
																		"src": "2804:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2789:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2789:3:1"
																},
																"nativeSrc": "2789:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2789:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2781:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2781:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_400239adc9e69987df7e7bf4151102499431456be40138755da18c0a587ab55a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2413:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2564:9:1",
														"nodeType": "YulTypedName",
														"src": "2564:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2578:4:1",
														"nodeType": "YulTypedName",
														"src": "2578:4:1",
														"type": ""
													}
												],
												"src": "2413:401:1"
											},
											{
												"body": {
													"nativeSrc": "2993:239:1",
													"nodeType": "YulBlock",
													"src": "2993:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3010:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3003:6:1"
																},
																"nativeSrc": "3003:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3003:21:1"
															},
															"nativeSrc": "3003:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3003:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3044:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3044:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3055:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3055:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3040:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:1"
																		},
																		"nativeSrc": "3040:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3040:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3060:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3060:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3033:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:1"
																},
																"nativeSrc": "3033:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3033:30:1"
															},
															"nativeSrc": "3033:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3033:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3083:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3083:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3094:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3094:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3079:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:1"
																		},
																		"nativeSrc": "3079:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3079:18:1"
																	},
																	{
																		"hexValue": "446f6d61696e52656769737472793a204f6e6c792061646d696e2063616e2063",
																		"kind": "string",
																		"nativeSrc": "3099:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3099:34:1",
																		"type": "",
																		"value": "DomainRegistry: Only admin can c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3072:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:1"
																},
																"nativeSrc": "3072:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3072:62:1"
															},
															"nativeSrc": "3072:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3072:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3154:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3154:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3165:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3165:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3150:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:1"
																		},
																		"nativeSrc": "3150:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3150:18:1"
																	},
																	{
																		"hexValue": "616c6c20746869732066756e6374696f6e",
																		"kind": "string",
																		"nativeSrc": "3170:19:1",
																		"nodeType": "YulLiteral",
																		"src": "3170:19:1",
																		"type": "",
																		"value": "all this function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3143:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:1"
																},
																"nativeSrc": "3143:47:1",
																"nodeType": "YulFunctionCall",
																"src": "3143:47:1"
															},
															"nativeSrc": "3143:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "3143:47:1"
														},
														{
															"nativeSrc": "3199:27:1",
															"nodeType": "YulAssignment",
															"src": "3199:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3211:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3222:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3222:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3207:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3207:3:1"
																},
																"nativeSrc": "3207:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3207:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3199:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3199:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa4890144b1dd84822325425d1cff6abb74592a84aa8ccb4e2300645fbeeb83a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2819:413:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2970:9:1",
														"nodeType": "YulTypedName",
														"src": "2970:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2984:4:1",
														"nodeType": "YulTypedName",
														"src": "2984:4:1",
														"type": ""
													}
												],
												"src": "2819:413:1"
											},
											{
												"body": {
													"nativeSrc": "3411:233:1",
													"nodeType": "YulBlock",
													"src": "3411:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3428:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3428:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3439:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3421:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:1"
																},
																"nativeSrc": "3421:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3421:21:1"
															},
															"nativeSrc": "3421:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3421:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3462:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3462:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3473:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3473:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3458:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3458:3:1"
																		},
																		"nativeSrc": "3458:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3458:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3478:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3478:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3451:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3451:6:1"
																},
																"nativeSrc": "3451:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3451:30:1"
															},
															"nativeSrc": "3451:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3451:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3501:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3501:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3512:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3512:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3497:3:1"
																		},
																		"nativeSrc": "3497:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3497:18:1"
																	},
																	{
																		"hexValue": "446f6d61696e52656769737472793a20446f6d61696e206e616d652063616e6e",
																		"kind": "string",
																		"nativeSrc": "3517:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3517:34:1",
																		"type": "",
																		"value": "DomainRegistry: Domain name cann"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3490:6:1"
																},
																"nativeSrc": "3490:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3490:62:1"
															},
															"nativeSrc": "3490:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3490:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3572:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3572:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3583:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3583:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3568:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:1"
																		},
																		"nativeSrc": "3568:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3568:18:1"
																	},
																	{
																		"hexValue": "6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "3588:13:1",
																		"nodeType": "YulLiteral",
																		"src": "3588:13:1",
																		"type": "",
																		"value": "ot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3561:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:1"
																},
																"nativeSrc": "3561:41:1",
																"nodeType": "YulFunctionCall",
																"src": "3561:41:1"
															},
															"nativeSrc": "3561:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "3561:41:1"
														},
														{
															"nativeSrc": "3611:27:1",
															"nodeType": "YulAssignment",
															"src": "3611:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3623:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3623:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3634:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3634:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:1"
																},
																"nativeSrc": "3619:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3619:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3611:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3611:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3339f474afdf0e37f4d993298f48e536fe48135f96f5513f5dde0093a76752b8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3237:407:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3388:9:1",
														"nodeType": "YulTypedName",
														"src": "3388:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3402:4:1",
														"nodeType": "YulTypedName",
														"src": "3402:4:1",
														"type": ""
													}
												],
												"src": "3237:407:1"
											},
											{
												"body": {
													"nativeSrc": "3823:245:1",
													"nodeType": "YulBlock",
													"src": "3823:245:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3840:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3840:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3851:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3833:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:1"
																},
																"nativeSrc": "3833:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3833:21:1"
															},
															"nativeSrc": "3833:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3833:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3874:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3885:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3885:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3870:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:1"
																		},
																		"nativeSrc": "3870:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3870:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3890:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:1",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3863:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:1"
																},
																"nativeSrc": "3863:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3863:30:1"
															},
															"nativeSrc": "3863:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3863:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3913:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3913:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3924:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3924:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3909:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:1"
																		},
																		"nativeSrc": "3909:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:18:1"
																	},
																	{
																		"hexValue": "446f6d61696e52656769737472793a204f6666696369616c2061646472657373",
																		"kind": "string",
																		"nativeSrc": "3929:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3929:34:1",
																		"type": "",
																		"value": "DomainRegistry: Official address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3902:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3902:6:1"
																},
																"nativeSrc": "3902:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3902:62:1"
															},
															"nativeSrc": "3902:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3902:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3984:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3984:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3995:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3995:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3980:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:1"
																		},
																		"nativeSrc": "3980:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3980:18:1"
																	},
																	{
																		"hexValue": "2063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "4000:25:1",
																		"nodeType": "YulLiteral",
																		"src": "4000:25:1",
																		"type": "",
																		"value": " cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3973:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3973:6:1"
																},
																"nativeSrc": "3973:53:1",
																"nodeType": "YulFunctionCall",
																"src": "3973:53:1"
															},
															"nativeSrc": "3973:53:1",
															"nodeType": "YulExpressionStatement",
															"src": "3973:53:1"
														},
														{
															"nativeSrc": "4035:27:1",
															"nodeType": "YulAssignment",
															"src": "4035:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4047:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4047:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4058:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4058:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4043:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:1"
																},
																"nativeSrc": "4043:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4043:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4035:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4035:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89d605ee78fe26d620f6940d1f47ddee2371dc8f25fd7a2e850939982115e2b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3649:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3800:9:1",
														"nodeType": "YulTypedName",
														"src": "3800:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3814:4:1",
														"nodeType": "YulTypedName",
														"src": "3814:4:1",
														"type": ""
													}
												],
												"src": "3649:419:1"
											},
											{
												"body": {
													"nativeSrc": "4247:231:1",
													"nodeType": "YulBlock",
													"src": "4247:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4264:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4264:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4275:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4257:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4257:6:1"
																},
																"nativeSrc": "4257:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4257:21:1"
															},
															"nativeSrc": "4257:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4257:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4298:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4298:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4309:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4309:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4294:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4294:3:1"
																		},
																		"nativeSrc": "4294:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4294:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4314:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4314:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4287:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4287:6:1"
																},
																"nativeSrc": "4287:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4287:30:1"
															},
															"nativeSrc": "4287:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4287:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4337:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4337:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4333:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4333:3:1"
																		},
																		"nativeSrc": "4333:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4333:18:1"
																	},
																	{
																		"hexValue": "446f6d61696e52656769737472793a20446f6d61696e20616c72656164792072",
																		"kind": "string",
																		"nativeSrc": "4353:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:34:1",
																		"type": "",
																		"value": "DomainRegistry: Domain already r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4326:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4326:6:1"
																},
																"nativeSrc": "4326:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4326:62:1"
															},
															"nativeSrc": "4326:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4326:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:1"
																		},
																		"nativeSrc": "4404:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:1"
																	},
																	{
																		"hexValue": "656769737465726564",
																		"kind": "string",
																		"nativeSrc": "4424:11:1",
																		"nodeType": "YulLiteral",
																		"src": "4424:11:1",
																		"type": "",
																		"value": "egistered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:1"
																},
																"nativeSrc": "4397:39:1",
																"nodeType": "YulFunctionCall",
																"src": "4397:39:1"
															},
															"nativeSrc": "4397:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "4397:39:1"
														},
														{
															"nativeSrc": "4445:27:1",
															"nodeType": "YulAssignment",
															"src": "4445:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4457:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4457:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4468:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4468:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4453:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4453:3:1"
																},
																"nativeSrc": "4453:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4453:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4445:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4445:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_209aa3c13be13d80e6819fc1acb7f7d92620b9012725a3d16f28c00e7778b413__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4073:405:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4224:9:1",
														"nodeType": "YulTypedName",
														"src": "4224:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4238:4:1",
														"nodeType": "YulTypedName",
														"src": "4238:4:1",
														"type": ""
													}
												],
												"src": "4073:405:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_400239adc9e69987df7e7bf4151102499431456be40138755da18c0a587ab55a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"DomainRegistry: Domain not regis\")\n        mstore(add(headStart, 96), \"tered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aa4890144b1dd84822325425d1cff6abb74592a84aa8ccb4e2300645fbeeb83a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"DomainRegistry: Only admin can c\")\n        mstore(add(headStart, 96), \"all this function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3339f474afdf0e37f4d993298f48e536fe48135f96f5513f5dde0093a76752b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"DomainRegistry: Domain name cann\")\n        mstore(add(headStart, 96), \"ot be empty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_89d605ee78fe26d620f6940d1f47ddee2371dc8f25fd7a2e850939982115e2b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"DomainRegistry: Official address\")\n        mstore(add(headStart, 96), \" cannot be zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_209aa3c13be13d80e6819fc1acb7f7d92620b9012725a3d16f28c00e7778b413__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"DomainRegistry: Domain already r\")\n        mstore(add(headStart, 96), \"egistered\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"4": [
									{
										"length": 32,
										"start": 249
									},
									{
										"length": 32,
										"start": 499
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80631c45278114610059578063264492351461008157806394310e51146100cc578063f52433cb146100df578063f851a440146100f4575b5f5ffd5b61006c610067366004610509565b61011b565b60405190151581526020015b60405180910390f35b6100b461008f366004610509565b80516020818301810180515f825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610078565b6100b46100da366004610509565b610156565b6100f26100ed366004610543565b6101e8565b005b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b5f5f6001600160a01b03165f83604051610135919061059d565b908152604051908190036020019020546001600160a01b0316141592915050565b5f5f5f83604051610167919061059d565b908152604051908190036020019020546001600160a01b03169050806101e25760405162461bcd60e51b815260206004820152602560248201527f446f6d61696e52656769737472793a20446f6d61696e206e6f742072656769736044820152641d195c995960da1b60648201526084015b60405180910390fd5b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461027a5760405162461bcd60e51b815260206004820152603160248201527f446f6d61696e52656769737472793a204f6e6c792061646d696e2063616e206360448201527030b636103a3434b990333ab731ba34b7b760791b60648201526084016101d9565b815f8151116102df5760405162461bcd60e51b815260206004820152602b60248201527f446f6d61696e52656769737472793a20446f6d61696e206e616d652063616e6e60448201526a6f7420626520656d70747960a81b60648201526084016101d9565b6001600160a01b03821661035b5760405162461bcd60e51b815260206004820152603760248201527f446f6d61696e52656769737472793a204f6666696369616c206164647265737360448201527f2063616e6e6f74206265207a65726f206164647265737300000000000000000060648201526084016101d9565b5f6001600160a01b03165f84604051610374919061059d565b908152604051908190036020019020546001600160a01b0316146103ec5760405162461bcd60e51b815260206004820152602960248201527f446f6d61696e52656769737472793a20446f6d61696e20616c726561647920726044820152681959da5cdd195c995960ba1b60648201526084016101d9565b815f846040516103fc919061059d565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790559083169061043690859061059d565b604051908190038120907f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12905f90a3505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261048d575f5ffd5b813567ffffffffffffffff8111156104a7576104a761046a565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156104d6576104d661046a565b6040528181528382016020018510156104ed575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f60208284031215610519575f5ffd5b813567ffffffffffffffff81111561052f575f5ffd5b61053b8482850161047e565b949350505050565b5f5f60408385031215610554575f5ffd5b823567ffffffffffffffff81111561056a575f5ffd5b6105768582860161047e565b92505060208301356001600160a01b0381168114610592575f5ffd5b809150509250929050565b5f82518060208501845e5f92019182525091905056fea2646970667358221220de138af3ccd3145301b31c3d9bf37ef49a0487fe6cb5b2faec9ad3b8f0d3aa9e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C452781 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x26449235 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x94310E51 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xF52433CB EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x509 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH0 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A20446F6D61696E206E6F74207265676973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D195C9959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A204F6E6C792061646D696E2063616E2063 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x30B636103A3434B990333AB731BA34B7B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D9 JUMP JUMPDEST DUP2 PUSH0 DUP2 MLOAD GT PUSH2 0x2DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A20446F6D61696E206E616D652063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6F7420626520656D707479 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A204F6666696369616C2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2063616E6E6F74206265207A65726F2061646472657373000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F6D61696E52656769737472793A20446F6D61696E20616C72656164792072 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1959DA5CDD195C9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D9 JUMP JUMPDEST DUP2 PUSH0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 DUP4 AND SWAP1 PUSH2 0x436 SWAP1 DUP6 SWAP1 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x48D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x4ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x519 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x53B DUP5 DUP3 DUP6 ADD PUSH2 0x47E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x554 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x576 DUP6 DUP3 DUP7 ADD PUSH2 0x47E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x592 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE SGT DUP11 RETURN 0xCC 0xD3 EQ MSTORE8 ADD 0xB3 SHR RETURNDATASIZE SWAP12 RETURN PUSH31 0xF49A0487FE6CB5B2FAEC9AD3B8F0D3AA9E64736F6C634300081C0033000000 ",
							"sourceMap": "519:2933:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3307:142;;;;;;:::i;:::-;;:::i;:::-;;;1369:14:1;;1362:22;1344:41;;1332:2;1317:18;3307:142:0;;;;;;;;785:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;785:41:0;;;;;;-1:-1:-1;;;;;1560:32:1;;;1542:51;;1530:2;1515:18;785:41:0;1396:203:1;2850:265:0;;;;;;:::i;:::-;;:::i;1985:481::-;;;;;;:::i;:::-;;:::i;:::-;;614:30;;;;;3307:142;3384:4;3439:1;-1:-1:-1;;;;;3408:33:0;:7;3416:10;3408:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;3408:19:0;:33;;;3307:142;-1:-1:-1;;3307:142:0:o;2850:265::-;2925:7;2945:21;2969:7;2977:10;2969:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;2969:19:0;;-1:-1:-1;2969:19:0;2999:77;;;;-1:-1:-1;;;2999:77:0;;2615:2:1;2999:77:0;;;2597:21:1;2654:2;2634:18;;;2627:30;2693:34;2673:18;;;2666:62;-1:-1:-1;;;2744:18:1;;;2737:35;2789:19;;2999:77:0;;;;;;;;;3094:13;2850:265;-1:-1:-1;;2850:265:0:o;1985:481::-;1092:10;-1:-1:-1;;;;;1106:5:0;1092:19;;1084:81;;;;-1:-1:-1;;;1084:81:0;;3021:2:1;1084:81:0;;;3003:21:1;3060:2;3040:18;;;3033:30;3099:34;3079:18;;;3072:62;-1:-1:-1;;;3150:18:1;;;3143:47;3207:19;;1084:81:0;2819:413:1;1084:81:0;2121:10:::1;1346:1;1325:10;1319:24;:28;1311:84;;;::::0;-1:-1:-1;;;1311:84:0;;3439:2:1;1311:84:0::1;::::0;::::1;3421:21:1::0;3478:2;3458:18;;;3451:30;3517:34;3497:18;;;3490:62;-1:-1:-1;;;3568:18:1;;;3561:41;3619:19;;1311:84:0::1;3237:407:1::0;1311:84:0::1;-1:-1:-1::0;;;;;2152:29:0;::::2;2144:97;;;::::0;-1:-1:-1;;;2144:97:0;;3851:2:1;2144:97:0::2;::::0;::::2;3833:21:1::0;3890:2;3870:18;;;3863:30;3929:34;3909:18;;;3902:62;4000:25;3980:18;;;3973:53;4043:19;;2144:97:0::2;3649:419:1::0;2144:97:0::2;2291:1;-1:-1:-1::0;;;;;2260:33:0::2;:7;2268:10;2260:19;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;2260:19:0::2;:33;2252:87;;;::::0;-1:-1:-1;;;2252:87:0;;4275:2:1;2252:87:0::2;::::0;::::2;4257:21:1::0;4314:2;4294:18;;;4287:30;4353:34;4333:18;;;4326:62;-1:-1:-1;;;4404:18:1;;;4397:39;4453:19;;2252:87:0::2;4073:405:1::0;2252:87:0::2;2382:15;2360:7;2368:10;2360:19;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:37;;-1:-1:-1;;;;;2360:37:0;;::::2;-1:-1:-1::0;;;;;;2360:37:0;;::::2;;::::0;;2413:45;;::::2;::::0;::::2;::::0;2430:10;;2413:45:::2;:::i;:::-;;::::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;1176:1:::1;1985:481:::0;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:726;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;300:6;287:20;330:18;322:6;319:30;316:56;;;352:18;;:::i;:::-;401:2;395:9;493:2;455:17;;-1:-1:-1;;451:31:1;;;484:2;447:40;443:54;431:67;;528:18;513:34;;549:22;;;510:62;507:88;;;575:18;;:::i;:::-;611:2;604:22;635;;;676:19;;;697:4;672:30;669:39;-1:-1:-1;666:59:1;;;721:1;718;711:12;666:59;785:6;778:4;770:6;766:17;759:4;751:6;747:17;734:58;840:1;812:19;;;833:4;808:30;801:41;;;;816:6;146:726;-1:-1:-1;;;146:726:1:o;877:322::-;946:6;999:2;987:9;978:7;974:23;970:32;967:52;;;1015:1;1012;1005:12;967:52;1055:9;1042:23;1088:18;1080:6;1077:30;1074:50;;;1120:1;1117;1110:12;1074:50;1143;1185:7;1176:6;1165:9;1161:22;1143:50;:::i;:::-;1133:60;877:322;-1:-1:-1;;;;877:322:1:o;1604:496::-;1682:6;1690;1743:2;1731:9;1722:7;1718:23;1714:32;1711:52;;;1759:1;1756;1749:12;1711:52;1799:9;1786:23;1832:18;1824:6;1821:30;1818:50;;;1864:1;1861;1854:12;1818:50;1887;1929:7;1920:6;1909:9;1905:22;1887:50;:::i;:::-;1877:60;-1:-1:-1;;1987:2:1;1972:18;;1959:32;-1:-1:-1;;;;;2020:31:1;;2010:42;;2000:70;;2066:1;2063;2056:12;2000:70;2089:5;2079:15;;;1604:496;;;;;:::o;2105:303::-;2236:3;2274:6;2268:13;2320:6;2313:4;2305:6;2301:17;2296:3;2290:37;2382:1;2346:16;;2371:13;;;-1:-1:-1;2346:16:1;2105:303;-1:-1:-1;2105:303:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "302600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admin()": "infinite",
								"domains(string)": "infinite",
								"getDomainAddress(string)": "infinite",
								"isDomainRegistered(string)": "infinite",
								"registerDomain(string,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1501,
									"end": 1552,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 3452,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220de138af3ccd3145301b31c3d9bf37ef49a0487fe6cb5b2faec9ad3b8f0d3aa9e64736f6c634300081c0033",
									".code": [
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "1C452781"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "26449235"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "94310E51"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "F52433CB"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 3452,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3307,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3307,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1384,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 785,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 785,
											"end": 826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 785,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1396,
											"end": 1599,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2850,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2850,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1985,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1985,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 614,
											"end": 644,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3408,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3441,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3441,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3307,
											"end": 3449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2969,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2615,
											"end": 2617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "446F6D61696E52656769737472793A20446F6D61696E206E6F74207265676973"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2999,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3107,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 3115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2850,
											"end": 3115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1102,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3062,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3040,
											"end": 3058,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3040,
											"end": 3058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "446F6D61696E52656769737472793A204F6E6C792061646D696E2063616E2063"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B636103A3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3207,
											"end": 3226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2819,
											"end": 3232,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1084,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1343,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1347,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1311,
											"end": 1395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1311,
											"end": 1395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1311,
											"end": 1395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1311,
											"end": 1395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3480,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "446F6D61696E52656769737472793A20446F6D61696E206E616D652063616E6E"
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F7420626520656D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3237,
											"end": 3644,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1311,
											"end": 1395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2181,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2241,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2144,
											"end": 2241,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2144,
											"end": 2241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2144,
											"end": 2241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2241,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "446F6D61696E52656769737472793A204F6666696369616C2061646472657373"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "PUSH",
											"source": 1,
											"value": "2063616E6E6F74206265207A65726F2061646472657373000000000000000000"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2241,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3649,
											"end": 4068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2241,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2144,
											"end": 2241,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2292,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2293,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2278,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2260,
											"end": 2279,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2279,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2293,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2339,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2252,
											"end": 2339,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2339,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2339,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2339,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4294,
											"end": 4312,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4294,
											"end": 4312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4287,
											"end": 4317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4387,
											"name": "PUSH",
											"source": 1,
											"value": "446F6D61696E52656769737472793A20446F6D61696E20616C72656164792072"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4326,
											"end": 4388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4453,
											"end": 4472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2339,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4073,
											"end": 4478,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2339,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2252,
											"end": 2339,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2382,
											"end": 2397,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2378,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2360,
											"end": 2379,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2397,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"modifierDepth": 2,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2440,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2413,
											"end": 2458,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "70F2FF07E8136617CDFB0433423063C9DD697C507560D7860CCE09FA86874A12"
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2413,
											"end": 2458,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 872,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 146,
											"end": 872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 189,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 227,
											"end": 233,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 223,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 219,
											"end": 246,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 209,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 209,
											"end": 264,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 260,
											"end": 261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 262,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 209,
											"end": 264,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 209,
											"end": 264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 300,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 307,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 322,
											"end": 328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 319,
											"end": 349,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 316,
											"end": 372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 316,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 316,
											"end": 372,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 352,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 370,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 493,
											"end": 495,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 455,
											"end": 472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 455,
											"end": 472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 451,
											"end": 482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 484,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 447,
											"end": 487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 431,
											"end": 498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 431,
											"end": 498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 513,
											"end": 547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 547,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 549,
											"end": 571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 549,
											"end": 571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 549,
											"end": 571,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 510,
											"end": 572,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 507,
											"end": 595,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 507,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 507,
											"end": 595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 575,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 575,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 575,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 593,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 575,
											"end": 593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 676,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 676,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 701,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 708,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 666,
											"end": 725,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 666,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 666,
											"end": 725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 721,
											"end": 722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 666,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 666,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 776,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 766,
											"end": 783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 747,
											"end": 764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 792,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 812,
											"end": 831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 812,
											"end": 831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 801,
											"end": 842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 146,
											"end": 872,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 146,
											"end": 872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 1199,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 877,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 974,
											"end": 997,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1002,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1107,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1074,
											"end": 1124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1122,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1074,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1174,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1143,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1143,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1193,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 877,
											"end": 1199,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 2100,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1604,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1741,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1746,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1761,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1809,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1818,
											"end": 1868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1818,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1929,
											"end": 1936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1887,
											"end": 1937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1937,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1887,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1991,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2052,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2000,
											"end": 2070,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2000,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 2100,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 2100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 2100,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 2100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 2100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2408,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2105,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2299,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2327,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2346,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/DomainRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"domains(string)": "26449235",
							"getDomainAddress(string)": "94310e51",
							"isDomainRegistered(string)": "1c452781",
							"registerDomain(string,address)": "f52433cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"domainName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"officialAddress\",\"type\":\"address\"}],\"name\":\"DomainRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"domains\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domainName\",\"type\":\"string\"}],\"name\":\"getDomainAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domainName\",\"type\":\"string\"}],\"name\":\"isDomainRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domainName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"officialAddress\",\"type\":\"address\"}],\"name\":\"registerDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A foundational contract that acts as a secure, on-chain directory for application domains. This contract solves the challenge of securely identifying application domains like \\\"chatgpt.com\\\" on-chain. A smart contract cannot trust a simple string name; it needs a cryptographic identity. This registry provides that by linking the human-readable domain name to a secure, official Hedera wallet address.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor sets the admin to the deployer\"},\"getDomainAddress(string)\":{\"details\":\"Get the official wallet address for a given domain name\",\"params\":{\"domainName\":\"The domain name to look up\"},\"returns\":{\"_0\":\"The official wallet address associated with the domain  This function allows the MemoryControl contract and any external party  to look up the official wallet address for a given domain name.\"}},\"isDomainRegistered(string)\":{\"details\":\"Check if a domain is registered\",\"params\":{\"domainName\":\"The domain name to check\"},\"returns\":{\"_0\":\"True if the domain is registered, false otherwise\"}},\"registerDomain(string,address)\":{\"details\":\"Register a new application domain to the registry\",\"params\":{\"domainName\":\"The human-readable domain name (e.g., \\\"chatgpt.com\\\")\",\"officialAddress\":\"The official Hedera wallet address controlled by the application's owner  This is a one-time setup for each participating application (e.g., ChatGPT, Claude)  to establish their official on-chain identity.\"}}},\"title\":\"DomainRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DomainRegistry.sol\":\"DomainRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DomainRegistry.sol\":{\"keccak256\":\"0x48c75951f830b3c394266cc4dcddf1a9037f6b3bcc2de08f442b2a442a7cf558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f330be7e7bb3992b0c8f46c2378a8c18bae7b0cba98d5d137f16598a54465891\",\"dweb:/ipfs/QmbrH9pspJ3izwm8VYnsMRSdWnrcj7stGoaYM9uWAcNt5w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/DomainRegistry.sol:DomainRegistry",
								"label": "domains",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/DomainRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/DomainRegistry.sol",
					"exportedSymbols": {
						"DomainRegistry": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DomainRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:456:0",
								"text": " @title DomainRegistry\n @dev A foundational contract that acts as a secure, on-chain directory for application domains.\n This contract solves the challenge of securely identifying application domains like \"chatgpt.com\" on-chain.\n A smart contract cannot trust a simple string name; it needs a cryptographic identity.\n This registry provides that by linking the human-readable domain name to a secure, official Hedera wallet address."
							},
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "DomainRegistry",
							"nameLocation": "528:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 4,
									"mutability": "immutable",
									"name": "admin",
									"nameLocation": "639:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "614:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "614:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "26449235",
									"id": 8,
									"mutability": "mutable",
									"name": "domains",
									"nameLocation": "819:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "785:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 7,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 5,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "793:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "785:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "803:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12",
									"id": 14,
									"name": "DomainRegistered",
									"nameLocation": "894:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "domainName",
												"nameLocation": "926:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "911:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "officialAddress",
												"nameLocation": "954:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "938:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:60:0"
									},
									"src": "888:83:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1073:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 17,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1092:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1096:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1092:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 19,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1106:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1092:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6d61696e52656769737472793a204f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1113:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa4890144b1dd84822325425d1cff6abb74592a84aa8ccb4e2300645fbeeb83a",
																"typeString": "literal_string \"DomainRegistry: Only admin can call this function\""
															},
															"value": "DomainRegistry: Only admin can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa4890144b1dd84822325425d1cff6abb74592a84aa8ccb4e2300645fbeeb83a",
																"typeString": "literal_string \"DomainRegistry: Only admin can call this function\""
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "1084:81:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "1176:1:0"
											}
										]
									},
									"id": 26,
									"name": "onlyAdmin",
									"nameLocation": "1061:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:2:0"
									},
									"src": "1052:133:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1300:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 33,
																			"name": "domainName",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "1325:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1319:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 31,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1319:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1319:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1337:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1319:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1346:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1319:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6d61696e52656769737472793a20446f6d61696e206e616d652063616e6e6f7420626520656d707479",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1349:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3339f474afdf0e37f4d993298f48e536fe48135f96f5513f5dde0093a76752b8",
																"typeString": "literal_string \"DomainRegistry: Domain name cannot be empty\""
															},
															"value": "DomainRegistry: Domain name cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3339f474afdf0e37f4d993298f48e536fe48135f96f5513f5dde0093a76752b8",
																"typeString": "literal_string \"DomainRegistry: Domain name cannot be empty\""
															}
														],
														"id": 30,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1311:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1311:84:0"
											},
											{
												"id": 41,
												"nodeType": "PlaceholderStatement",
												"src": "1406:1:0"
											}
										]
									},
									"id": 43,
									"name": "validDomainName",
									"nameLocation": "1258:15:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "domainName",
												"nameLocation": "1288:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1274:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 27,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1274:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:26:0"
									},
									"src": "1249:166:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1515:37:0",
										"statements": [
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1526:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 48,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1534:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1538:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1534:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1526:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1526:18:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1427:68:0",
										"text": " @dev Constructor sets the admin to the deployer"
									},
									"id": 53,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1515:0:0"
									},
									"scope": 146,
									"src": "1501:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2133:333:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 67,
																"name": "officialAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "2152:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2179:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2171:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 68,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2171:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2171:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2152:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6d61696e52656769737472793a204f6666696369616c20616464726573732063616e6e6f74206265207a65726f2061646472657373",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89d605ee78fe26d620f6940d1f47ddee2371dc8f25fd7a2e850939982115e2b4",
																"typeString": "literal_string \"DomainRegistry: Official address cannot be zero address\""
															},
															"value": "DomainRegistry: Official address cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89d605ee78fe26d620f6940d1f47ddee2371dc8f25fd7a2e850939982115e2b4",
																"typeString": "literal_string \"DomainRegistry: Official address cannot be zero address\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2144:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 77,
																	"name": "domains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "2260:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																		"typeString": "mapping(string memory => address)"
																	}
																},
																"id": 79,
																"indexExpression": {
																	"id": 78,
																	"name": "domainName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "2268:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2260:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2291:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 80,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2283:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2283:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2260:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6d61696e52656769737472793a20446f6d61696e20616c72656164792072656769737465726564",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2295:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_209aa3c13be13d80e6819fc1acb7f7d92620b9012725a3d16f28c00e7778b413",
																"typeString": "literal_string \"DomainRegistry: Domain already registered\""
															},
															"value": "DomainRegistry: Domain already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_209aa3c13be13d80e6819fc1acb7f7d92620b9012725a3d16f28c00e7778b413",
																"typeString": "literal_string \"DomainRegistry: Domain already registered\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2252:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "2252:87:0"
											},
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 88,
															"name": "domains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "2360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 90,
														"indexExpression": {
															"id": 89,
															"name": "domainName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2368:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2360:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "officialAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "2382:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2360:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "2360:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 95,
															"name": "domainName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2430:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 96,
															"name": "officialAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "2442:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 94,
														"name": "DomainRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2413:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2413:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "EmitStatement",
												"src": "2408:50:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1564:415:0",
										"text": " @dev Register a new application domain to the registry\n @param domainName The human-readable domain name (e.g., \"chatgpt.com\")\n @param officialAddress The official Hedera wallet address controlled by the application's owner\n \n This is a one-time setup for each participating application (e.g., ChatGPT, Claude) \n to establish their official on-chain identity."
									},
									"functionSelector": "f52433cb",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 61,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 60,
												"name": "onlyAdmin",
												"nameLocations": [
													"2095:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 26,
												"src": "2095:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2095:9:0"
										},
										{
											"arguments": [
												{
													"id": 63,
													"name": "domainName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 56,
													"src": "2121:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 64,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 62,
												"name": "validDomainName",
												"nameLocations": [
													"2105:15:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 43,
												"src": "2105:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2105:27:0"
										}
									],
									"name": "registerDomain",
									"nameLocation": "1994:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "domainName",
												"nameLocation": "2033:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2019:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "officialAddress",
												"nameLocation": "2063:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2055:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:77:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2133:0:0"
									},
									"scope": 146,
									"src": "1985:481:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2934:181:0",
										"statements": [
											{
												"assignments": [
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"mutability": "mutable",
														"name": "domainAddress",
														"nameLocation": "2953:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 126,
														"src": "2945:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 108,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2945:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"baseExpression": {
														"id": 110,
														"name": "domains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2969:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
															"typeString": "mapping(string memory => address)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "domainName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2977:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2969:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2945:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 115,
																"name": "domainAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "3007:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3032:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3024:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3024:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3024:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3007:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6d61696e52656769737472793a20446f6d61696e206e6f742072656769737465726564",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3036:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_400239adc9e69987df7e7bf4151102499431456be40138755da18c0a587ab55a",
																"typeString": "literal_string \"DomainRegistry: Domain not registered\""
															},
															"value": "DomainRegistry: Domain not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_400239adc9e69987df7e7bf4151102499431456be40138755da18c0a587ab55a",
																"typeString": "literal_string \"DomainRegistry: Domain not registered\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "2999:77:0"
											},
											{
												"expression": {
													"id": 124,
													"name": "domainAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 109,
													"src": "3094:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 107,
												"id": 125,
												"nodeType": "Return",
												"src": "3087:20:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2478:366:0",
										"text": " @dev Get the official wallet address for a given domain name\n @param domainName The domain name to look up\n @return The official wallet address associated with the domain\n \n This function allows the MemoryControl contract and any external party \n to look up the official wallet address for a given domain name."
									},
									"functionSelector": "94310e51",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDomainAddress",
									"nameLocation": "2859:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "domainName",
												"nameLocation": "2890:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2876:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:26:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2925:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2924:9:0"
									},
									"scope": 146,
									"src": "2850:265:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "3390:59:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 135,
															"name": "domains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "3408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 137,
														"indexExpression": {
															"id": 136,
															"name": "domainName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3416:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3408:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3439:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 138,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3431:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3431:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3408:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 134,
												"id": 143,
												"nodeType": "Return",
												"src": "3401:40:0"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "3127:174:0",
										"text": " @dev Check if a domain is registered\n @param domainName The domain name to check\n @return True if the domain is registered, false otherwise"
									},
									"functionSelector": "1c452781",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isDomainRegistered",
									"nameLocation": "3316:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "domainName",
												"nameLocation": "3349:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3335:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:26:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3384:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:0"
									},
									"scope": 146,
									"src": "3307:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "519:2933:0",
							"usedErrors": [],
							"usedEvents": [
								14
							]
						}
					],
					"src": "33:3421:0"
				},
				"id": 0
			}
		}
	}
}