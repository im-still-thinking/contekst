{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_domainRegistry",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					}
				],
				"name": "AccessGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					}
				],
				"name": "AccessRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					}
				],
				"name": "DomainAccessGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					}
				],
				"name": "DomainAccessRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					}
				],
				"name": "MemoryAccessGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					}
				],
				"name": "MemoryAccessRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "sourceDomainName",
						"type": "string"
					}
				],
				"name": "MemoryAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "MemoryDeleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expirationTime",
						"type": "uint256"
					}
				],
				"name": "TimeBasedAccessGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					}
				],
				"name": "TimeBasedAccessRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expirationTime",
						"type": "uint256"
					}
				],
				"name": "TimeBasedDomainAccessGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expirationTime",
						"type": "uint256"
					}
				],
				"name": "TimeBasedMemoryAccessGranted",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "accessExpiration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "accessList",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "metadataHash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "sourceDomainName",
						"type": "string"
					}
				],
				"name": "addMemory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "deleteMemory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "domainAccessExpiration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "domainAccessList",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "domainRegistry",
				"outputs": [
					{
						"internalType": "contract IDomainRegistry",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "getMemory",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "metadataHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "sourceDomain",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "sourceDomainName",
								"type": "string"
							}
						],
						"internalType": "struct MemoryControl.Memory",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "getMemorySourceDomain",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "domainName",
						"type": "string"
					}
				],
				"name": "grantAccessToDomain",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					}
				],
				"name": "grantAccessToDomainMemories",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "grantAccessToMemory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					}
				],
				"name": "grantAccessToUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					}
				],
				"name": "grantDomainAccessToDomainMemories",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "domainName",
						"type": "string"
					},
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "grantDomainAccessToMemory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "domainName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "durationInSeconds",
						"type": "uint256"
					}
				],
				"name": "grantTimeBasedAccessToDomain",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "durationInSeconds",
						"type": "uint256"
					}
				],
				"name": "grantTimeBasedAccessToDomainMemories",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "durationInSeconds",
						"type": "uint256"
					}
				],
				"name": "grantTimeBasedAccessToMemory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "durationInSeconds",
						"type": "uint256"
					}
				],
				"name": "grantTimeBasedAccessToUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "durationInSeconds",
						"type": "uint256"
					}
				],
				"name": "grantTimeBasedDomainAccessToDomainMemories",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "domainName",
						"type": "string"
					},
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "durationInSeconds",
						"type": "uint256"
					}
				],
				"name": "grantTimeBasedDomainAccessToMemory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					}
				],
				"name": "hasAccess",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					}
				],
				"name": "hasAccessExpired",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					}
				],
				"name": "hasEnhancedAccess",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "hasMemoryAccessExpired",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "isMemoryExists",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "memories",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "metadataHash",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "createdAt",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "sourceDomain",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "sourceDomainName",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "memoryAccessExpiration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "memoryAccessList",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "domainName",
						"type": "string"
					}
				],
				"name": "revokeAccessFromDomain",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					}
				],
				"name": "revokeAccessFromDomainMemories",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "revokeAccessFromMemory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					}
				],
				"name": "revokeAccessFromUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "granteeDomain",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "sourceDomain",
						"type": "string"
					}
				],
				"name": "revokeDomainAccessFromDomainMemories",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "domainName",
						"type": "string"
					},
					{
						"internalType": "bytes32",
						"name": "memoryId",
						"type": "bytes32"
					}
				],
				"name": "revokeDomainAccessFromMemory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "domainName",
						"type": "string"
					}
				],
				"name": "revokeTimeBasedAccessFromDomain",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grantee",
						"type": "address"
					}
				],
				"name": "revokeTimeBasedAccessFromUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "The main contract that users and applications will interact with to manage memory ownership,  permissions, and the audit trail. This contract uses a hybrid on-chain/off-chain storage model where only a cryptographic hash of the metadata is stored on-chain for cost efficiency and privacy.",
			"kind": "dev",
			"methods": {
				"addMemory(bytes32,string)": {
					"details": "Add a new memory to the system",
					"params": {
						"metadataHash": "The keccak256 hash of the full off-chain metadata (the \"digital fingerprint\")",
						"sourceDomainName": "The domain name where this memory was created (e.g., \"chatgpt.com\")  This function is called by the application backend when a user creates a new memory. It automatically grants access to the source domain's official wallet address."
					}
				},
				"constructor": {
					"details": "Constructor sets the domain registry address",
					"params": {
						"_domainRegistry": "The address of the DomainRegistry contract"
					}
				},
				"deleteMemory(bytes32)": {
					"details": "Delete a memory from the system",
					"params": {
						"memoryId": "The unique memory ID (metadataHash) to delete  This function is called by a user to delete a memory they own."
					}
				},
				"getMemory(bytes32)": {
					"details": "Get memory information",
					"params": {
						"memoryId": "The unique memory ID to retrieve"
					},
					"returns": {
						"_0": "The Memory struct containing all on-chain data"
					}
				},
				"getMemorySourceDomain(bytes32)": {
					"details": "Get the source domain name for a memory (helper function)",
					"params": {
						"memoryId": "The memory ID to check"
					},
					"returns": {
						"_0": "The source domain name"
					}
				},
				"grantAccessToDomain(string)": {
					"details": "Grant access to an application domain",
					"params": {
						"domainName": "The domain name to grant access to (e.g., \"claude.ai\")  This function allows a user to grant access to an application like \"claude.ai\"."
					}
				},
				"grantAccessToDomainMemories(address,string)": {
					"details": "Grant access to all memories from a specific source domain",
					"params": {
						"grantee": "The wallet address to grant access to",
						"sourceDomain": "The source domain to grant access to (e.g., \"claude.ai\")"
					}
				},
				"grantAccessToMemory(address,bytes32)": {
					"details": "Grant access to a specific memory",
					"params": {
						"grantee": "The wallet address to grant access to",
						"memoryId": "The specific memory ID to grant access to"
					}
				},
				"grantAccessToUser(address)": {
					"details": "Grant access to another user's wallet",
					"params": {
						"grantee": "The wallet address to grant access to  This function allows a user to grant access to another user's wallet."
					}
				},
				"grantDomainAccessToDomainMemories(string,string)": {
					"details": "Grant access to all memories from a specific source domain for a domain",
					"params": {
						"granteeDomain": "The domain name to grant access to",
						"sourceDomain": "The source domain to grant access to (e.g., \"claude.ai\")"
					}
				},
				"grantDomainAccessToMemory(string,bytes32)": {
					"details": "Grant access to a specific memory for a domain",
					"params": {
						"domainName": "The domain name to grant access to",
						"memoryId": "The specific memory ID to grant access to"
					}
				},
				"grantTimeBasedAccessToDomain(string,uint256)": {
					"details": "Grant time-based access to an application domain",
					"params": {
						"domainName": "The domain name to grant access to",
						"durationInSeconds": "Duration of access in seconds"
					}
				},
				"grantTimeBasedAccessToDomainMemories(address,string,uint256)": {
					"details": "Grant time-based access to all memories from a specific source domain",
					"params": {
						"durationInSeconds": "Duration of access in seconds",
						"grantee": "The wallet address to grant access to",
						"sourceDomain": "The source domain to grant access to"
					}
				},
				"grantTimeBasedAccessToMemory(address,bytes32,uint256)": {
					"details": "Grant time-based access to a specific memory",
					"params": {
						"durationInSeconds": "Duration of access in seconds",
						"grantee": "The wallet address to grant access to",
						"memoryId": "The specific memory ID to grant access to"
					}
				},
				"grantTimeBasedAccessToUser(address,uint256)": {
					"details": "Grant time-based access to another user's wallet",
					"params": {
						"durationInSeconds": "Duration of access in seconds",
						"grantee": "The wallet address to grant access to"
					}
				},
				"grantTimeBasedDomainAccessToDomainMemories(string,string,uint256)": {
					"details": "Grant time-based access to all memories from a specific source domain for a domain",
					"params": {
						"durationInSeconds": "Duration of access in seconds",
						"granteeDomain": "The domain name to grant access to",
						"sourceDomain": "The source domain to grant access to"
					}
				},
				"grantTimeBasedDomainAccessToMemory(string,bytes32,uint256)": {
					"details": "Grant time-based access to a specific memory for a domain",
					"params": {
						"domainName": "The domain name to grant access to",
						"durationInSeconds": "Duration of access in seconds",
						"memoryId": "The specific memory ID to grant access to"
					}
				},
				"hasAccess(bytes32,address)": {
					"details": "Check if a grantee has access to a memory",
					"params": {
						"grantee": "The wallet address to check access for",
						"memoryId": "The unique memory ID to check access for"
					},
					"returns": {
						"_0": "True if the grantee has access, false otherwise"
					}
				},
				"hasAccessExpired(address)": {
					"details": "Check if access has expired for a grantee",
					"params": {
						"grantee": "The wallet address to check"
					},
					"returns": {
						"_0": "True if access has expired, false otherwise"
					}
				},
				"hasEnhancedAccess(bytes32,address)": {
					"details": "Check if a grantee has access to a memory with enhanced granular control",
					"params": {
						"grantee": "The wallet address to check access for",
						"memoryId": "The unique memory ID to check access for"
					},
					"returns": {
						"_0": "True if the grantee has access, false otherwise"
					}
				},
				"hasMemoryAccessExpired(address,bytes32)": {
					"details": "Check if memory-specific access has expired for a grantee",
					"params": {
						"grantee": "The wallet address to check",
						"memoryId": "The memory ID to check"
					},
					"returns": {
						"_0": "True if access has expired, false otherwise"
					}
				},
				"isMemoryExists(bytes32)": {
					"details": "Check if a memory exists",
					"params": {
						"memoryId": "The unique memory ID to check"
					},
					"returns": {
						"_0": "True if the memory exists, false otherwise"
					}
				},
				"revokeAccessFromDomain(string)": {
					"details": "Revoke access from an application domain",
					"params": {
						"domainName": "The domain name to revoke access from  This function allows users to revoke permissions from applications at any time."
					}
				},
				"revokeAccessFromDomainMemories(address,string)": {
					"details": "Revoke access to all memories from a specific source domain",
					"params": {
						"grantee": "The wallet address to revoke access from",
						"sourceDomain": "The source domain to revoke access to"
					}
				},
				"revokeAccessFromMemory(address,bytes32)": {
					"details": "Revoke access to a specific memory",
					"params": {
						"grantee": "The wallet address to revoke access from",
						"memoryId": "The specific memory ID to revoke access to"
					}
				},
				"revokeAccessFromUser(address)": {
					"details": "Revoke access from another user's wallet",
					"params": {
						"grantee": "The wallet address to revoke access from  This function allows users to revoke permissions at any time."
					}
				},
				"revokeDomainAccessFromDomainMemories(string,string)": {
					"details": "Revoke access to all memories from a specific source domain for a domain",
					"params": {
						"granteeDomain": "The domain name to revoke access from",
						"sourceDomain": "The source domain to revoke access to"
					}
				},
				"revokeDomainAccessFromMemory(string,bytes32)": {
					"details": "Revoke access to a specific memory for a domain",
					"params": {
						"domainName": "The domain name to revoke access from",
						"memoryId": "The specific memory ID to revoke access to"
					}
				},
				"revokeTimeBasedAccessFromDomain(string)": {
					"details": "Revoke time-based access from a domain",
					"params": {
						"domainName": "The domain name to revoke access from"
					}
				},
				"revokeTimeBasedAccessFromUser(address)": {
					"details": "Revoke time-based access from a user",
					"params": {
						"grantee": "The wallet address to revoke access from"
					}
				}
			},
			"title": "MemoryControl",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/MemoryControl.sol": "MemoryControl"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/IDomainRegistry.sol": {
			"keccak256": "0x2dc9516d2ae6d4ebc69a9cefc6d5c56b56bd05f7077d0af0e4642b7ca8879ab9",
			"license": "MIT",
			"urls": [
				"bzz-raw://2e80f2ab6039ca328cca0f2718e379e13f232e9970406d07e2bf916ffe58e65e",
				"dweb:/ipfs/QmXw9mt8tnE2yzE36bGf6d62WZ5ds4hCUL1Dpv5reksRKf"
			]
		},
		"contracts/MemoryControl.sol": {
			"keccak256": "0xdcebf1b6a69bb8aba98825f4ed56d4492880bbb3f34df55ba4869c23750c2030",
			"license": "MIT",
			"urls": [
				"bzz-raw://7940b9486b6695bc213ac1a6d05fbd3dd4f47d0360be7a42a6b6af360b5dd3a8",
				"dweb:/ipfs/QmZjsK21TzhdaP9kGjf1vwewDZsrUG8RZQnjTagAgz1VPx"
			]
		}
	},
	"version": 1
}